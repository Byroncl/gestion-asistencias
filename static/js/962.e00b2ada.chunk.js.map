{"version":3,"file":"static/js/962.e00b2ada.chunk.js","mappings":"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","sources":["components/users/notificacion.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../assets/css/notificacion.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell, faBars } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface NotificacionRecord {\r\n    id: number;\r\n    fecha: string;\r\n    mensaje: string;\r\n    estado: string;\r\n    cedula: string;\r\n}\r\n\r\nconst Notificacion: React.FC = () => {\r\n    const [notificacionesList, setNotificacionesList] = useState<NotificacionRecord[]>([]);\r\n    const [fecha, setFecha] = useState('');\r\n    const [mensaje, setMensaje] = useState('');\r\n    const [cedula, setCedula] = useState('');\r\n    const [userCedula, setUserCedula] = useState<string | null>(null); // Cédula del usuario actual\r\n\r\n    useEffect(() => {\r\n        const storedList = JSON.parse(localStorage.getItem('notificacionesList') || '[]');\r\n        setNotificacionesList(storedList);\r\n\r\n        const session = JSON.parse(localStorage.getItem('session') || '{}');\r\n        setUserCedula(session.cedula || null);\r\n    }, []);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (formValido()) {\r\n            const newNotificacion = {\r\n                id: notificacionesList.length + 1,\r\n                fecha,\r\n                mensaje,\r\n                estado: 'No leído',\r\n                cedula\r\n            };\r\n            const newList = [...notificacionesList, newNotificacion];\r\n            setNotificacionesList(newList);\r\n            localStorage.setItem('notificacionesList', JSON.stringify(newList));\r\n            setFecha('');\r\n            setMensaje('');\r\n            setCedula('');\r\n        } else {\r\n            alert('Por favor complete correctamente todos los campos.');\r\n        }\r\n    };\r\n\r\n    const formValido = (): boolean => {\r\n        let valid = true;\r\n\r\n        // Validación de fecha\r\n        if (!validateDate(fecha)) {\r\n            alert('Formato de fecha inválido. Por favor, utiliza el formato correcto.');\r\n            valid = false;\r\n        }\r\n\r\n        // Validación de mensaje\r\n        if (mensaje.trim().length < 3 || mensaje.trim().length > 20) {\r\n            alert('El mensaje debe tener entre 3 y 20 caracteres.');\r\n            valid = false;\r\n        }\r\n\r\n        // Validación de cédula\r\n        if (cedula.trim().length !== 10) {\r\n            alert('La cédula debe tener exactamente 10 caracteres.');\r\n            valid = false;\r\n        }\r\n\r\n        return valid;\r\n    };\r\n\r\n    const validateDate = (date: string): boolean => {\r\n        // Expresión regular para validar el formato de fecha YYYY-MM-DD\r\n        const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n        return regex.test(date);\r\n    };\r\n\r\n    const toggleMenu = () => {\r\n        const menu = document.getElementById('menuLista');\r\n        if (menu) {\r\n            if (menu.style.display === 'block') {\r\n                menu.style.display = 'none';\r\n            } else {\r\n                menu.style.display = 'block';\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleTable = () => {\r\n        const tableMenu = document.getElementById('menuLista2');\r\n        if (tableMenu) {\r\n            if (tableMenu.style.display === 'block') {\r\n                tableMenu.style.display = 'none';\r\n            } else {\r\n                tableMenu.style.display = 'block';\r\n            }\r\n        }\r\n    };\r\n\r\n    const filteredNotificaciones = notificacionesList.filter(\r\n        (notificacion) => notificacion.cedula === userCedula\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"bienvenida-container\">\r\n                <div className=\"bienvenida\">\r\n                    <h1>Notificaciones</h1>\r\n                </div>\r\n                <div className=\"icono\">\r\n                    <FontAwesomeIcon icon={faBell} onClick={toggleMenu} />\r\n                    <ul className=\"menu-lista\" id=\"menuLista\">\r\n                        {filteredNotificaciones.slice(0, 3).map((notificacion) => (\r\n                            <li key={notificacion.id}><a href=\"#\">{notificacion.mensaje}</a></li>\r\n                        ))}\r\n                        <a href=\"/notificaciones\">Ver completo</a>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"Icono2\" id=\"icono2\">\r\n                    <FontAwesomeIcon icon={faBars} onClick={toggleTable} />\r\n                    <ul className=\"menu-listado\" id=\"menuLista2\">\r\n                        <li><a href=\"/perfil\">Perfil</a></li>\r\n                        <a href=\"/\">Cerrar sesion</a>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <nav>\r\n                <ul>\r\n                    <li><a href=\"/\">Cerrar sesión</a></li>\r\n                    <li><a href=\"/home\">Principal</a></li>\r\n                    <li><a href=\"/calendario\">Calendario</a></li>\r\n                    <li><a href=\"/registro-asistencias\">Registrar asistencia</a></li>\r\n                    <li><a href=\"/atrasos\">Atrasos</a></li>\r\n                </ul>\r\n            </nav>\r\n            <div className=\"form-container\">\r\n                <h2>Enviar Notificación</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"fecha\">Fecha:</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"fecha\"\r\n                        value={fecha}\r\n                        onChange={(e) => setFecha(e.target.value)}\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"mensaje\">Mensaje:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"mensaje\"\r\n                        value={mensaje}\r\n                        onChange={(e) => setMensaje(e.target.value)}\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"cedula\">Cédula del Destinatario:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"cedula\"\r\n                        value={cedula}\r\n                        onChange={(e) => setCedula(e.target.value)}\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">Enviar Notificación</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"tabla-notificaciones-container\">\r\n                <h2>Notificaciones</h2>\r\n                <table className=\"tabla-notificaciones\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Fecha</th>\r\n                            <th>Mensaje</th>\r\n                            <th>Estado</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filteredNotificaciones.map((notificacion) => (\r\n                            <tr key={notificacion.id}>\r\n                                <td>{notificacion.id}</td>\r\n                                <td>{notificacion.fecha}</td>\r\n                                <td>{notificacion.mensaje}</td>\r\n                                <td className={`estado-${notificacion.estado.toLowerCase()}`}>{notificacion.estado}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <footer>\r\n                <p>Para más información o una demostración en vivo, no dudes en <a href=\"\">contactarnos.</a></p>\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notificacion;\r\n"],"names":["Notificacion","notificacionesList","setNotificacionesList","useState","fecha","setFecha","mensaje","setMensaje","cedula","setCedula","userCedula","setUserCedula","useEffect","storedList","JSON","parse","localStorage","getItem","session","formValido","valid","validateDate","alert","trim","length","date","test","filteredNotificaciones","filter","notificacion","_jsxs","children","className","_jsx","FontAwesomeIcon","icon","faBell","onClick","toggleMenu","menu","document","getElementById","style","display","id","slice","map","href","faBars","toggleTable","tableMenu","onSubmit","e","preventDefault","newNotificacion","estado","newList","setItem","stringify","htmlFor","type","value","onChange","target","required","concat","toLowerCase"],"sourceRoot":""}